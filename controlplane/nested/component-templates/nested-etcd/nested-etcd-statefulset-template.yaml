apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.clusterName}}-etcd
  namespace: {{.componentNamespace}}
spec:
  revisionHistoryLimit: 10
  serviceName: {{.clusterName}}-etcd
  selector:
    matchLabels:
      component-name: {{.componentName}}
  # etcd will not be updated, unless it is deleted
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        component-name: {{.componentName}}
    spec:
      containers:
      - name: {{.componentName}}
        image: virtualcluster/etcd-v3.4.0
        imagePullPolicy: Always
        command:
        - etcd
        # pass the pod name(hostname) to container for composing the advertise-urls args
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        - --name=$(HOSTNAME)
        - --trusted-ca-file=/etc/kubernetes/pki/ca/tls.crt
        - --client-cert-auth
        - --cert-file=/etc/kubernetes/pki/etcd/tls.crt
        - --key-file=/etc/kubernetes/pki/etcd/tls.key
        - --peer-client-cert-auth
        - --peer-trusted-ca-file=/etc/kubernetes/pki/ca/tls.crt
        - --peer-cert-file=/etc/kubernetes/pki/etcd/tls.crt
        - --peer-key-file=/etc/kubernetes/pki/etcd/tls.key
        - --listen-peer-urls=https://0.0.0.0:2380
        - --listen-client-urls=https://0.0.0.0:2379
        - --initial-advertise-peer-urls=https://$(HOSTNAME).{{.clusterName}}-etcd.$(NAMESPACE):2380
        # we use a headless service to encapsulate each pod
        - --advertise-client-urls=https://$(HOSTNAME).{{.clusterName}}-etcd.$(NAMESPACE):2379
        - --initial-cluster-state=new
        - --initial-cluster-token=vc-etcd
        - --data-dir=/var/lib/etcd/data
        # --initial-cluster option will be set during runtime based on the number of replicas
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/ca/tls.crt --cert=/etc/kubernetes/pki/health/tls.crt --key=/etc/kubernetes/pki/health/tls.key endpoint health
          failureThreshold: 8
          initialDelaySeconds: 60
          timeoutSeconds: 15
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - ETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/ca/tls.crt --cert=/etc/kubernetes/pki/health/tls.crt --key=/etc/kubernetes/pki/health/tls.key endpoint health
          failureThreshold: 8
          initialDelaySeconds: 15
          periodSeconds: 2
          timeoutSeconds: 15
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/ca
          name: {{.clusterName}}-etcd-ca
          readOnly: true
        - mountPath: /etc/kubernetes/pki/etcd
          name: {{.clusterName}}-etcd-client
          readOnly: true
        - mountPath: /etc/kubernetes/pki/health
          name: {{.clusterName}}-etcd-health-client
          readOnly: true
      volumes:
      - name: {{.clusterName}}-etcd-ca
        secret:
          defaultMode: 420
          secretName: {{.clusterName}}-etcd
      - name: {{.clusterName}}-etcd-client
        secret:
          defaultMode: 420
          secretName: {{.clusterName}}-etcd-client
      - name: {{.clusterName}}-etcd-health-client
        secret:
          defaultMode: 420
          secretName: {{.clusterName}}-etcd-health-client
